// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "jsonProtocol"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  // If you want to use Prisma Migrate, you will need to manually create a shadow database
  // https://neon.tech/docs/guides/prisma-migrate#configure-a-shadow-database-for-prisma-migrate
  // make sure to append ?connect_timeout=10 to the connection string
  // shadowDatabaseUrl = env(“SHADOW_DATABASE_URL”)
}

model User {
  id            String         @id
  email         String         @unique
  first_name    String?
  last_name     String?
  rawData       Json?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  organizations Organization[]
  Workflow      Workflow[]
  WorkflowRun   WorkflowRun[]
}

model Organization {
  id            String     @id
  name          String
  image_url     String?
  logo_url      String?
  rawData       Json?
  createdByUser String
  createdBy     User       @relation(fields: [createdByUser], references: [id], onDelete: Cascade)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  workflows     Workflow[]
}

model Workflow {
  id        Int     @id @default(autoincrement())
  createdBy String
  ownerId   String
  name      String
  published Boolean @default(false)

  model         String
  modelSettings Json?
  template      String
  instruction   String?
  inputs        Json

  publicUrl String? @unique

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  WorkflowRun WorkflowRun[]

  organization Organization @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  user         User         @relation(fields: [createdBy], references: [id], onDelete: Cascade)

  @@index([ownerId])
}

model WorkflowRun {
  id         Int      @id @default(autoincrement())
  workflow   Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  workflowId Int
  result     String
  rawRequest Json?
  rawResult  Json?
  createdBy  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user User @relation(fields: [createdBy], references: [id], onDelete: Cascade)
}
